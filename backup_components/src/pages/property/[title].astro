---
const { title } = Astro.params;
import Layout from '@layouts/Layout.astro';
import propertiesArray from '@utils/properties';
import { Image, getImage } from 'astro:assets';

const filteredObjects = propertiesArray.filter(
  (item) => item.propertyName.toLocaleLowerCase() === title?.toLocaleLowerCase(),
);

let propertyName: string = '';
let propertyDescription: string = '';
let img: ImageMetadata | string;
let imgW: number = 0;
let imgH: number = 0;
let url;

if (filteredObjects.length > 0) {
  propertyName = filteredObjects[0].propertyName;
  propertyDescription = filteredObjects[0].propertyDescription;
  img = filteredObjects[0].img;
  imgW = filteredObjects[0].imgW;
  imgH = filteredObjects[0].imgH;

  url = await getImage({ src: img, format: 'webp' });
}
export const prerender = false;
---

<Layout title={propertyName || "Detalle de Propiedad"}>
  <header class="relative w-full aspect-video max-h-[80vh] overflow-hidden">
    {
      url && (
        <Image
          src={url.src}
          alt={propertyName}
          width={imgW}
          height={imgH}
          class="w-full h-full object-cover object-center rounded-b-3xl shadow-lg"
        />
      )
    }
    <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent flex items-end p-8">
      <h1 class="text-white text-4xl md:text-6xl font-extrabold leading-tight drop-shadow-lg capitalize">
        {propertyName}
      </h1>
    </div>
  </header>
  <article class="p-8 md:p-12 bg-white rounded-t-3xl shadow-xl -mt-8 relative z-10">
    <p class="max-w-4xl mx-auto text-lg md:text-xl text-gray-800 leading-relaxed whitespace-pre-line">
      {propertyDescription}
    </p>
    <div class="mt-10 text-center">
      <a href="/properties" class="inline-block bg-pink-600 hover:bg-pink-700 text-white font-bold py-3 px-6 rounded-full transition duration-300 ease-in-out shadow-lg">
        Ver todas las propiedades
      </a>
    </div>
  </article>
</Layout>

<style lang="scss">
  /* Mantener estilos SCSS existentes si no se refactorizan a Tailwind */
  /* .header {
    padding: 10px 30px;
    width: 100%;
    aspect-ratio: 16/9;
    max-height: 80vh;
    overflow-y: hidden;

    .Img {
      aspect-ratio: 16/9;
      border-radius: 20px;
      width: 100%;
      height: 100%;
      object-fit: cover;
      background-attachment: fixed;
      object-position: bottom;
    }
  }

  article {
    padding: 40px;
    background: #f1ffe6;
    h1 {
      text-align: center;
      text-transform: capitalize;
      font-style: italic;
      font-size: clamp(1.5rem, -0.0469rem + 7.22vw, 4.2rem);
      margin-top: 0;
      margin-bottom: 40px;
      background: radial-gradient(
        circle at bottom,
        #e5056a 15%,
        rgb(240, 142, 176) 40%
      );
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      font-weight: 800;
    }

    p {
      max-width: 70ch;
      font-weight: 500;
      margin: 0 auto;
      text-wrap: balance;
      white-space: pre-line;
      color: rgb(0, 0, 0);
    }
  } */
</style>